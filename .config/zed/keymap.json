// run "debug: open key control view" to see context and
// keystroke matches in real time
[
  {
    "bindings": {
      "ctrl-k": "menu::SelectPrevious",
      "ctrl-j": "menu::SelectNext",
      "ctrl-w g": "git_panel::ToggleFocus",
      "ctrl-w c": "collab_panel::ToggleFocus"
    }
  },
  // Normal mode only
  {
    "context": "vim_mode == normal",
    "bindings": {
      "space o p": "project_panel::OpenPermanent",
      "space p p": "project_panel::ToggleFocus",
      "space s v": "pane::SplitRight",
      "space s h": "pane::SplitDown",
      "g ]": "editor::GoToDiagnostic",
      "g [": "editor::GoToPreviousDiagnostic",
      "g r": "editor::FindAllReferences",
      "] d": ["workspace::SendKeystrokes", "] shift-d escape g ."],
      "space c a": "editor::ToggleCodeActions",
      "space c o": "outline::Toggle",

      // pane navigation
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown",
      "ctrl-a p": "pane::ActivatePreviousItem",
      "ctrl-a n": "pane::ActivateNextItem",
      "ctrl-a x": "pane::CloseActiveItem",

      "space g g": "git::Diff",
      "space g G": "git_panel::ToggleFocus",

      // code actions
      "space r n": "editor::Rename",

      "enter": "editor::OpenExcerpts",

      // code navigation
      "ctrl-shift-d": "vim::ScrollDown",
      "ctrl-shift-u": "vim::ScrollUp",
      "ctrl-u": ["workspace::SendKeystrokes", "ctrl-shift-u z z"],
      "ctrl-d": ["workspace::SendKeystrokes", "ctrl-shift-d z z"],

      "space f f": "file_finder::Toggle",
      "space f s": "pane::DeploySearch",

      "space a s": "assistant::ToggleFocus",
      "ctrl-a": "assistant::ToggleFocus",
      "space a i": "assistant::InlineAssist",

      "cmd-alt-k": "editor::AddSelectionAbove", // Insert cursor above
      "cmd-alt-j": "editor::AddSelectionBelow" // Insert cursor below
    }
  },
  // Visual mode
  {
    "context": "Editor && vim_mode == visual && !VimWaiting && !VimObject",
    "bindings": {
      "shift-j": "editor::MoveLineDown",
      "shift-k": "editor::MoveLineUp",

      "space a i": "assistant::InlineAssist",

      "cmd-alt-k": "editor::AddSelectionAbove", // Insert cursor above
      "cmd-alt-j": "editor::AddSelectionBelow" // Insert cursor below
    }
  },
  {
    "context": "ProjectPanel",
    "bindings": {
      "tab": "project_panel::OpenPermanent"
    }
  },
  {
    "context": "Editor && VimControl && !VimWaiting && !menu",
    "bindings": {
      "ctrl-w z": "workspace::ToggleZoom",
      "ctrl-w t": "terminal_panel::ToggleFocus",
      "g ]": "editor::GoToDiagnostic",
      "g [": "editor::GoToPreviousDiagnostic",
      "g r": "editor::FindAllReferences",
      "space l a": "editor::ToggleCodeActions",
      "space l r": "editor::Rename",
      "space l f": "editor::Format",
      "space l l": "diagnostics::Deploy",
      "g c c": "editor::ToggleComments",
      "space f": "file_finder::Toggle",
      "space o": "tab_switcher::Toggle",
      "space e": "workspace::ToggleLeftDock",
      // "space p": "outline::Toggle",
      // "ctrl-n": "workspace::ToggleRightDock"
      "space v": "editor::GoToDefinitionSplit"
    }
  },
  {
    "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
    "bindings": {
      "space s w": "pane::DeploySearch",
      "space m p": "markdown::OpenPreview",
      "space m P": "markdown::OpenPreviewToTheSide",
      "space f p": "projects::OpenRecent",

      // +LSP
      "space c a": "editor::ToggleCodeActions",
      "space .": "editor::ToggleCodeActions",
      "space c r": "editor::Rename",
      "g d": "editor::GoToDefinition",
      "g D": "editor::GoToDefinitionSplit",
      "g i": "editor::GoToImplementation",
      "g I": "editor::GoToImplementationSplit",
      "g t": "editor::GoToTypeDefinition",
      "g T": "editor::GoToTypeDefinitionSplit",
      "g r": "editor::FindAllReferences",
      "] d": "editor::GoToDiagnostic",
      "] e": "editor::GoToDiagnostic",
      "[ e": "editor::GoToPreviousDiagnostic",
      "space space": "file_finder::Toggle",

      // Symbol search
      "s s": "outline::Toggle",
      "s S": "project_symbols::Toggle",

      // +Git
      // Git prev/next hunk
      "] h": "editor::GoToHunk",
      "[ h": "editor::GoToPreviousHunk",

      "space /": "pane::DeploySearch",

      "space x x": "diagnostics::Deploy",
      "space e": "pane::RevealInProjectPanel"
    }
  },
  {
    "context": "GitPanel",
    "bindings": {
      "ctrl-l": "git_panel::Close"
      // "m": "git_panel::OpenMenu",
      // "e": "git_panel::FocusEditor",
      // "c": "git_panel::FocusChanges"
    }
  },
  {
    "context": "CollabPanel",
    "bindings": {
      "ctrl l": "collab_panel::ToggleFocus"
    }
  },
  // Empty pane, set of keybindings that are available when there is no active editor
  {
    "context": "EmptyPane || SharedScreen",
    "bindings": {
      // Open file finder
      "space space": "file_finder::Toggle",
      // Open recent project
      "space f p": "projects::OpenRecent"
    }
  },
  {
    "context": "AssistantPanel",
    "bindings": {
      "q q": "workspace::ToggleRightDock"
    }
  },
  // Comment code
  {
    "context": "Editor && vim_mode == visual && !VimWaiting && !menu",
    "bindings": {
      // visual, visual line & visual block modes
      "g c": "editor::ToggleComments"
    }
  },
  // Better escape
  {
    "context": "Editor && vim_mode == insert && !menu",
    "bindings": {
      "j j": "vim::NormalBefore", // remap jj in insert mode to escape
      "j k": "vim::NormalBefore" // remap jk in insert mode to escape
    }
  },
  {
    "context": "Editor && vim_operator == c",
    "bindings": {
      "c": "vim::CurrentLine",
      "r": "editor::Rename", // zed specific
      "a": "editor::ToggleCodeActions"
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "a": "project_panel::NewFile",
      "A": "project_panel::NewDirectory",
      "r": "project_panel::Rename",
      "d": "project_panel::Delete",
      "x": "project_panel::Cut",
      "c": "project_panel::Copy",
      "p": "project_panel::Paste",
      // Close project panel as project file panel on the right
      "q": "workspace::ToggleRightDock",
      "space e": "workspace::ToggleRightDock",
      // Navigate between panel
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown"
    }
  },
  {
    "context": "Editor && (vim_mode == normal || vim_mode == visual) && !VimWaiting && !menu",
    "bindings": {
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown"
    }
  },
  {
    "context": "Editor",
    "bindings": {
      "cmd-[": "pane::GoBack",
      "cmd-]": "pane::GoForward"
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "k": "menu::SelectPrevious",
      "j": "menu::SelectNext",
      "h": "project_panel::CollapseSelectedEntry",
      "l": "project_panel::ExpandSelectedEntry",
      "o": "project_panel::Open"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      // "ctrl-k": ["workspace::ActivatePaneInDirection", "Up"],
      "ctrl-k": "terminal_panel::ToggleFocus"
    }
  }
  // {
  //   "context": "ProjectPanel && not_editing",
  //   "bindings": {
  //     "k": "menu::SelectPrev",
  //     "j": "menu::SelectNext",
  //     "h": "project_panel::CollapseSelectedEntry",
  //     "l": "project_panel::ExpandSelectedEntry",
  //     "o": "project_panel::Open",
  //     "ctrl-h": "project_panel::ToggleFocus",
  //     "ctrl-enter": "project_panel::Open"
  //   }
  // }
]
